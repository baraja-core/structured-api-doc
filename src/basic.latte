<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=0.7, shrink-to-fit=no">
	<title>REST API documentation</title>
	<link type="text/css" rel="stylesheet" href="https://unpkg.com/bootstrap/dist/css/bootstrap.min.css">
	<link type="text/css" rel="stylesheet" href="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.css">
</head>
<body>
<div id="app">
	<b-container class="bv-example-row">
		<b-row>
			<b-col class="mb-3">
				<b-navbar toggleable type="dark" variant="dark">
					<b-navbar-brand href="#">API Doc</b-navbar-brand>
				</b-navbar>
			</b-col>
		</b-row>
		<b-row>
			<b-col cols="3">
				<b-list-group>
					<b-list-group-item href="#" @click="activeEndpoint=null">Overview</b-list-group-item>
					<template v-for="endpoint in structure">
						<b-list-group-item href="#" @click="activeEndpoint=endpoint.route"
										   class="d-flex justify-content-between align-items-center">
							{{ endpoint.name }}
							<b-badge :variant="endpoint.actions.length === 0 ? 'warning' : 'secondary'" pill>
								{{ endpoint.actions.length }}
							</b-badge>
						</b-list-group-item>
					</template>
				</b-list-group>
			</b-col>
			<b-col>
				<div v-if="activeEndpoint === null">
					<h1>Welcome to REST API Documentation</h1>
					<template v-if="errors.length > 0">
						Errors:
						<ul>
							<li v-for="error in errors" class="text-danger">{{ error }}</li>
						</ul>
					</template>
				</div>
				<div v-else>
					<h1>{{ endpoint.name }}</h1>
					<div v-if="endpoint.description" class="mb-3" style="white-space:pre">
							{{ endpoint.description }}
						</div>
					<div v-if="endpoint.actions.length === 0">
						<b-jumbotron>
							<p>No API endpoints here.</p>
							<p>Please contact your backend developer.</p>
						</b-jumbotron>
					</div>
					<div v-for="action in endpoint.actions" class="mb-5">
						<b-card>
							<template v-slot:header>
								<b-badge pill :variant="variantByAction[action.httpMethod]">
									{{ action.httpMethod }}
								</b-badge>
								<code class="ml-3">
									api/v1/{{ endpoint.route + (action.route !== 'default' ? '/' + action.route : '') }}
								</code>
							</template>
							<b-card-text>
								<template v-if="action.description">
									<p style="white-space:pre">{{ action.description }}</p>
									<hr>
								</template>
								<p><b>Parameters:</b></p>
								<template v-if="action.parameters.length === 0">
									<p><i>No parameters.</i></p>
								</template>
								<template v-else>
									<parameters :parameters="action.parameters"></parameters>
								</template>
								<template v-if="action.throws.length > 0">
									<p><b>Throws:</b></p>
									<ul>
										<li v-for="throwException in action.throws">{{ throwException }}</li>
									</ul>
								</template>
							</b-card-text>
						</b-card>
					</div>
				</div>
			</b-col>
		</b-row>
		<b-row>
			<b-col class="text-secondary my-3">
				Generated by
				<a href="https://github.com/baraja-core/structured-api-doc" target="_blank" class="text-secondary"
				   style="text-decoration:underline">Baraja documentation</a>.
			</b-col>
		</b-row>
	</b-container>
</div>
<script src="https://unpkg.com/vue@latest/dist/vue.min.js"></script>
<script src="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.js"></script>
<script src="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue-icons.min.js"></script>
<script>
	new Vue({
		el: '#app',
		data: function () {
			return {
				activeEndpoint: null,
				errors: {$errors},
				structure: {$structure},
				variantByAction: {
					'GET': 'primary',
					'POST': 'success',
					'CREATE': 'success',
					'PUT': 'warning',
					'PATCH': 'warning',
					'DELETE': 'danger'
				}
			}
		},
		computed: {
			endpoint() {
				if (this.activeEndpoint === null) {
					return null;
				}

				let activeEndpoint = null;
				this.structure.forEach(item => {
					if (this.activeEndpoint === item.route) {
						activeEndpoint = item;
					}
				});

				return activeEndpoint;
			}
		}
	});

	Vue.component('parameters', {
		props: ['parameters'],
		template: `<table class="table table-sm">
			<tr>
				<th class="text-center" style="width:2em">#</th>
				<th>Name</th>
				<th>Type</th>
				<th>Default</th>
				<th>Description</th>
				<th></th>
			</tr>
			<template v-for="parameter in parameters">
				<tr>
					<td class="text-center text-secondary text-small">{{ parameter.position }}</td>
					<td>{{ parameter.name }}</td>
					<td>{{ parameter.type }}</td>
					<td>
						<code v-if="parameter.default">{{ parameter.default }}</code>
						<code v-if="!parameter.default && !parameter.required">null</code>
					</td>
					<td>
						{{ parameter.description }}
					</td>
					<td class="text-right">
						<template v-if="parameter.required">
							<b-icon icon="exclamation-circle-fill" variant="danger"></b-icon>
							<b class="text-danger">required</b>
						</template>
						<template v-else>
							<i class="text-secondary text-small">optional</i>
						</template>
					</td>
				</tr>
				<tr v-if="parameter.children">
					<td>&nbsp;</td>
					<td colspan="5" class="px-0 pt-0">
						<parameters :parameters="parameter.children">
					</td>
				</tr>
			</template>
		</table>`
	});
</script>
</body>
</html>
